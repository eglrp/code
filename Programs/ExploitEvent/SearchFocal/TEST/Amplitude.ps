%!PS-Adobe-2.0
%%Title: Amplitude.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Mon Mar  3 11:24:08 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Amplitude.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Tian, Ye)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Mar  3 11:24:08 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
882 280 M
63 0 V
6045 0 R
-63 0 V
stroke
798 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
882 739 M
63 0 V
6045 0 R
-63 0 V
stroke
798 739 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5000)]
] -46.7 MRshow
1.000 UL
LTb
882 1198 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10000)]
] -46.7 MRshow
1.000 UL
LTb
882 1658 M
63 0 V
6045 0 R
-63 0 V
stroke
798 1658 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15000)]
] -46.7 MRshow
1.000 UL
LTb
882 2117 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2117 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20000)]
] -46.7 MRshow
1.000 UL
LTb
882 2576 M
63 0 V
6045 0 R
-63 0 V
stroke
798 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25000)]
] -46.7 MRshow
1.000 UL
LTb
882 3035 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30000)]
] -46.7 MRshow
1.000 UL
LTb
882 3494 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3494 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 35000)]
] -46.7 MRshow
1.000 UL
LTb
882 3954 M
63 0 V
6045 0 R
-63 0 V
stroke
798 3954 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40000)]
] -46.7 MRshow
1.000 UL
LTb
882 4413 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4413 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 45000)]
] -46.7 MRshow
1.000 UL
LTb
882 4872 M
63 0 V
6045 0 R
-63 0 V
stroke
798 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50000)]
] -46.7 MRshow
1.000 UL
LTb
882 280 M
0 63 V
0 4529 R
0 -63 V
stroke
882 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1646 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1646 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
2409 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2409 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
3173 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3173 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
3936 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3936 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
4700 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4700 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
5463 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5463 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
6227 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6227 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350)]
] -46.7 MCshow
1.000 UL
LTb
6990 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6990 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6339 4739 M
('245.25_41.R_AMP_AZ_s200_d38_r-93_h9' using 1:\($2*10000\)) Rshow
LT0
6423 4739 M
399 0 V
882 3295 M
31 -45 V
30 -41 V
31 -39 V
30 -36 V
31 -32 V
30 -29 V
31 -24 V
30 -21 V
31 -17 V
30 -12 V
31 -8 V
30 -3 V
31 1 V
31 6 V
30 10 V
31 15 V
30 19 V
31 23 V
30 27 V
31 31 V
30 35 V
31 38 V
30 42 V
31 44 V
31 47 V
30 49 V
31 51 V
30 54 V
31 54 V
30 56 V
31 57 V
30 57 V
31 58 V
30 57 V
31 58 V
30 56 V
31 57 V
31 55 V
30 54 V
31 52 V
30 51 V
31 48 V
30 47 V
31 44 V
30 41 V
31 39 V
30 36 V
31 33 V
30 30 V
31 27 V
31 23 V
30 20 V
31 16 V
30 12 V
31 9 V
30 5 V
31 2 V
30 -2 V
31 -6 V
30 -9 V
31 -13 V
30 -17 V
31 -20 V
31 -23 V
30 -27 V
31 -30 V
30 -33 V
31 -36 V
30 -38 V
31 -41 V
30 -44 V
31 -46 V
30 -48 V
31 -49 V
31 -52 V
30 -52 V
31 -54 V
30 -55 V
31 -56 V
30 -56 V
31 -57 V
30 -56 V
31 -56 V
30 -56 V
31 -55 V
30 -53 V
31 -53 V
31 -51 V
30 -49 V
31 -46 V
30 -45 V
31 -41 V
30 -39 V
31 -36 V
30 -32 V
31 -29 V
30 -24 V
31 -21 V
30 -17 V
31 -12 V
31 -8 V
30 -3 V
stroke 3997 2988 M
31 1 V
30 6 V
31 10 V
30 15 V
31 19 V
30 23 V
31 27 V
30 31 V
31 35 V
30 38 V
31 42 V
31 44 V
30 47 V
31 49 V
30 51 V
31 54 V
30 54 V
31 56 V
30 57 V
31 57 V
30 58 V
31 57 V
31 58 V
30 56 V
31 57 V
30 55 V
31 54 V
30 52 V
31 51 V
30 48 V
31 47 V
30 44 V
31 41 V
30 39 V
31 36 V
31 33 V
30 30 V
31 27 V
30 23 V
31 20 V
30 16 V
31 12 V
30 9 V
31 5 V
30 2 V
31 -2 V
30 -6 V
31 -9 V
31 -13 V
30 -17 V
31 -20 V
30 -23 V
31 -27 V
30 -30 V
31 -33 V
30 -36 V
31 -38 V
30 -41 V
31 -44 V
30 -46 V
31 -48 V
31 -49 V
30 -52 V
31 -52 V
30 -54 V
31 -55 V
30 -56 V
31 -56 V
30 -57 V
31 -56 V
30 -56 V
31 -56 V
31 -55 V
30 -53 V
31 -53 V
30 -51 V
31 -49 V
30 -46 V
882 608 M
31 3 V
30 2 V
31 3 V
30 2 V
31 2 V
30 1 V
31 1 V
30 1 V
31 0 V
30 -1 V
31 0 V
30 -2 V
31 -1 V
31 -3 V
30 -2 V
31 -3 V
30 -3 V
31 -4 V
30 -4 V
31 -5 V
30 -4 V
31 -5 V
30 -5 V
31 -5 V
31 -5 V
stroke 1646 571 M
30 -6 V
31 -5 V
30 -4 V
31 -5 V
30 -5 V
31 -4 V
30 -4 V
31 -3 V
30 -3 V
31 -2 V
30 -2 V
31 -2 V
31 -1 V
30 0 V
31 0 V
30 0 V
31 1 V
30 1 V
31 2 V
30 2 V
31 1 V
30 3 V
31 2 V
30 2 V
31 2 V
31 2 V
30 2 V
31 2 V
30 2 V
31 1 V
30 1 V
31 2 V
30 1 V
31 0 V
30 1 V
31 0 V
30 1 V
31 0 V
31 0 V
30 0 V
31 0 V
30 0 V
31 0 V
30 1 V
31 0 V
30 1 V
31 0 V
30 1 V
31 2 V
31 1 V
30 2 V
31 2 V
30 2 V
31 3 V
30 3 V
31 3 V
30 3 V
31 3 V
30 4 V
31 3 V
30 4 V
31 4 V
31 3 V
30 3 V
31 4 V
30 3 V
31 2 V
30 3 V
31 2 V
30 2 V
31 1 V
30 1 V
31 1 V
30 0 V
31 -1 V
31 0 V
30 -2 V
31 -1 V
30 -3 V
31 -2 V
30 -3 V
31 -3 V
30 -4 V
31 -4 V
30 -5 V
31 -4 V
30 -5 V
31 -5 V
31 -5 V
30 -5 V
31 -6 V
30 -5 V
31 -4 V
30 -5 V
31 -5 V
30 -4 V
31 -4 V
30 -3 V
31 -3 V
31 -2 V
30 -2 V
31 -2 V
30 -1 V
31 0 V
stroke 4822 525 M
30 0 V
31 0 V
30 1 V
31 1 V
30 2 V
31 2 V
30 1 V
31 3 V
31 2 V
30 2 V
31 2 V
30 2 V
31 2 V
30 2 V
31 2 V
30 1 V
31 1 V
30 2 V
31 1 V
30 0 V
31 1 V
31 0 V
30 1 V
31 0 V
30 0 V
31 0 V
30 0 V
31 0 V
30 0 V
31 1 V
30 0 V
31 1 V
30 0 V
31 1 V
31 2 V
30 1 V
31 2 V
30 2 V
31 2 V
30 3 V
31 3 V
30 3 V
31 3 V
30 3 V
31 4 V
31 3 V
30 4 V
31 4 V
30 3 V
31 3 V
30 4 V
882 309 M
31 -2 V
30 -1 V
31 0 V
30 0 V
31 1 V
30 0 V
31 1 V
30 1 V
31 0 V
30 0 V
31 -1 V
30 0 V
31 -2 V
31 -1 V
30 -2 V
31 -2 V
30 -2 V
31 -3 V
30 -2 V
31 -1 V
30 0 V
31 2 V
30 3 V
31 5 V
31 5 V
30 6 V
31 6 V
30 6 V
31 7 V
30 7 V
31 7 V
30 7 V
31 8 V
30 7 V
31 7 V
30 8 V
31 7 V
31 7 V
30 7 V
31 6 V
30 7 V
31 6 V
30 6 V
31 6 V
30 5 V
31 5 V
30 5 V
31 4 V
30 3 V
31 4 V
31 2 V
30 3 V
stroke 2470 467 M
31 2 V
30 1 V
31 1 V
30 0 V
31 0 V
30 -1 V
31 -1 V
30 -2 V
31 -2 V
30 -3 V
31 -3 V
31 -3 V
30 -4 V
31 -5 V
30 -4 V
31 -6 V
30 -5 V
31 -6 V
30 -6 V
31 -6 V
30 -7 V
31 -6 V
31 -7 V
30 -7 V
31 -7 V
30 -7 V
31 -6 V
30 -7 V
31 -7 V
30 -7 V
31 -6 V
30 -6 V
31 -5 V
30 -6 V
31 -4 V
31 -4 V
30 -4 V
31 -2 V
30 -2 V
31 -1 V
30 0 V
31 0 V
30 1 V
31 0 V
30 1 V
31 1 V
30 0 V
31 0 V
31 -1 V
30 0 V
31 -2 V
30 -1 V
31 -2 V
30 -2 V
31 -2 V
30 -3 V
31 -2 V
30 -1 V
31 0 V
30 2 V
31 3 V
31 5 V
30 5 V
31 6 V
30 6 V
31 6 V
30 7 V
31 7 V
30 7 V
31 7 V
30 8 V
31 7 V
31 7 V
30 8 V
31 7 V
30 7 V
31 7 V
30 6 V
31 7 V
30 6 V
31 6 V
30 6 V
31 5 V
30 5 V
31 5 V
31 4 V
30 3 V
31 4 V
30 2 V
31 3 V
30 2 V
31 1 V
30 1 V
31 0 V
30 0 V
31 -1 V
30 -1 V
31 -2 V
31 -2 V
30 -3 V
31 -3 V
30 -3 V
31 -4 V
30 -5 V
stroke 5646 447 M
31 -4 V
30 -6 V
31 -5 V
30 -6 V
31 -6 V
30 -6 V
31 -7 V
31 -6 V
30 -7 V
31 -7 V
30 -7 V
31 -7 V
30 -6 V
31 -7 V
30 -7 V
31 -7 V
30 -6 V
31 -6 V
31 -5 V
30 -6 V
31 -4 V
30 -4 V
31 -4 V
30 -2 V
1.000 UP
stroke
LT1
/Helvetica findfont 140 scalefont setfont
LTb
6339 4599 M
('Azi_misG_misP_amp_10sec.txt' using 1:6) Rshow
LT1
882 3904 Pls
958 3889 Pls
1035 3828 Pls
1111 3645 Pls
1187 3586 Pls
1264 3452 Pls
1340 3257 Pls
1416 3045 Pls
1493 2913 Pls
1569 2989 Pls
1646 3347 Pls
1722 3734 Pls
1798 3980 Pls
1875 4000 Pls
1951 3957 Pls
2027 4003 Pls
2104 4087 Pls
2180 4178 Pls
2256 4262 Pls
2333 4252 Pls
2409 4221 Pls
2485 4317 Pls
2562 4452 Pls
2638 4562 Pls
2714 4478 Pls
2791 4233 Pls
2867 4005 Pls
2943 3756 Pls
3020 3589 Pls
3096 3417 Pls
3173 3214 Pls
3249 2994 Pls
3325 2848 Pls
3402 2775 Pls
3478 2789 Pls
3554 2827 Pls
3631 2750 Pls
3707 2586 Pls
3783 2439 Pls
3860 2369 Pls
3936 2351 Pls
4012 2368 Pls
4089 2384 Pls
4165 2313 Pls
4241 2208 Pls
4318 2134 Pls
4394 2068 Pls
4470 2085 Pls
4547 2057 Pls
4623 2034 Pls
4700 2013 Pls
4776 2026 Pls
4852 2178 Pls
4929 2367 Pls
5005 2812 Pls
5081 3497 Pls
5158 4016 Pls
5234 4402 Pls
5310 4507 Pls
5387 4564 Pls
5463 4516 Pls
5539 4343 Pls
5616 4168 Pls
5692 3988 Pls
5768 3733 Pls
5845 3494 Pls
5921 3271 Pls
5997 3095 Pls
6074 3101 Pls
6150 3225 Pls
6227 3467 Pls
6303 3721 Pls
6622 4599 Pls
1.000 UP
1.000 UL
LT2
/Helvetica findfont 140 scalefont setfont
LTb
6339 4459 M
('Azi_misG_misP_amp_20sec.txt' using 1:6) Rshow
LT2
882 682 Crs
958 716 Crs
1035 737 Crs
1111 741 Crs
1187 734 Crs
1264 735 Crs
1340 743 Crs
1416 761 Crs
1493 780 Crs
1569 791 Crs
1646 793 Crs
1722 807 Crs
1798 820 Crs
1875 829 Crs
1951 831 Crs
2027 825 Crs
2104 815 Crs
2180 804 Crs
2256 800 Crs
2333 797 Crs
2409 804 Crs
2485 813 Crs
2562 819 Crs
2638 829 Crs
2714 829 Crs
2791 822 Crs
2867 821 Crs
2943 809 Crs
3020 790 Crs
3096 763 Crs
3173 726 Crs
3249 682 Crs
3325 639 Crs
3402 601 Crs
3478 577 Crs
3554 580 Crs
3631 599 Crs
3707 630 Crs
3783 681 Crs
3860 729 Crs
3936 770 Crs
4012 794 Crs
4089 809 Crs
4165 812 Crs
4241 794 Crs
4318 770 Crs
4394 720 Crs
4470 703 Crs
4547 702 Crs
4623 704 Crs
4700 707 Crs
4776 713 Crs
4852 730 Crs
4929 746 Crs
5005 761 Crs
5081 808 Crs
5158 840 Crs
5234 874 Crs
5310 884 Crs
5387 876 Crs
5463 852 Crs
5539 822 Crs
5616 799 Crs
5692 774 Crs
5768 758 Crs
5845 744 Crs
5921 729 Crs
5997 712 Crs
6074 692 Crs
6150 671 Crs
6227 654 Crs
6303 659 Crs
6622 4459 Crs
1.000 UL
LTb
882 4872 N
882 280 L
6108 0 V
0 4592 V
-6108 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
