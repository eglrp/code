#include <iostream>
#include <iomanip>
#include <cmath>

template< class T >
struct FocalInfo {
   T strike, dip, rake, depth;

   //FocalInfo( T strikein = 180, T dipin = 45, T rakein = 0, T depthin = 10 )
   FocalInfo( T strikein = -12345, T dipin = -12345, T rakein = -12345, T depthin = -12345 )
      : strike(strikein), dip(dipin), rake(rakein), depth(depthin) {}

	/* check validation */
	bool isValid() {
		return (strike>=0.&&strike<360.) && (dip>=0.&&dip<=90.) &&
				 (rake>=-180.&&rake<180.) && (depth>=0.) ;
	}

	/* Transfer to the auxiliary nodal plane and slip of the current */
	void Auxiliary() {
		float s2, d2, r2;
		// convert deg to rad
		float deg2rad = M_PI/180.;
		strike *= deg2rad; dip *= deg2rad; rake *= deg2rad;
		// dip
		d2 = acos( sin(rake)*sin(dip) );
		// rake
		float sin_r2 = cos(dip) / sin(d2);
		float sin_dphi = cos(rake) / sin(d2);
		float cos_r2 = -sin(dip) * sin_dphi;	// 0 ~ pi
		r2 = asin(sin_r2);	// -pi/2 ~ pi/2
		if( cos_r2 < 0. ) r2 = M_PI - r2;
		// strike
		float cos_dphi = -1. / (tan(dip)*tan(d2));
		float dphi = asin(sin_dphi);
		if( cos_dphi < 0. ) dphi = M_PI - dphi;
		s2 = strike - dphi;
		// check and correct quadrant
		if( d2 > 0.5*M_PI ) {
			s2 += M_PI;
			d2 = M_PI - d2;
			r2 = 2.*M_PI - r2;
		}
		// convert back;
		float rad2deg = 1./deg2rad;
		strike = s2*rad2deg; dip = d2*rad2deg; rake = r2*rad2deg;
		Correct2PI();
	}

   friend std::ostream& operator<< ( std::ostream& o, const FocalInfo& f ) {
      o.precision(6);
      o<<std::setw(6)<<f.strike<<" "<<std::setw(6)<<f.dip<<" "<<std::setw(6)<<f.rake<<"  "<<std::setw(6)<<f.depth; 
      return o; 
   }

   friend bool operator== ( const FocalInfo<T>& fi1, const FocalInfo<T>& fi2 ) {
      T dis_st = fabs(fi1.strike - fi2.strike);
      T dis_di = fabs(fi1.dip - fi2.dip);
      T dis_ra = fabs(fi1.rake - fi2.rake);
      T dis_de = fabs(fi1.depth - fi2.depth);
      return (dis_st<0.1 && dis_di<0.1 && dis_ra<0.1 && dis_de<0.1);
   }

private:
	/* shift by 2PIs into the correct range */
	void Correct2PI() {
		if( strike==-12345. || rake==-12345. ) return;
		while( strike >= 360. ) strike -= 360.;
		while( strike < 0. ) strike += 360.;
		while( rake >= 180. ) rake -= 360.;
	}

};
