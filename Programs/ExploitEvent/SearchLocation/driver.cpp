/* search for earthquake location and focal infomation from surface wave measurements */
/* the search space and measurement files are given in the input parameter file as follows: */
   /* clon, clat defines the search center (required) */
   /* Rs defines the search radius (required) */
   /* strike, dip, rake, depth defines the initial focal mechanism */
   /* Raleigh wave measurements ( stalon, stalat, grT, phT, amp ) */
   /* Love wave measurements ( stalon, stalat, grT, phT, amp ) */

#include "EQKSearcher.h"
#include <cstdio>
#include <cstdlib>
#include <iostream>

int main( int argc, char *argv[] ) {
   if( argc != 2 ) {
      std::cerr<<"Usage: "<<argv[0]<<" [parameter file]"<<std::endl;
      exit(-1);
   }

   EQKSearcher eSearcher( argv[1] );

   if( ! eSearcher.LoadData() ) {
      exit(0);
   }

   for(int iter=0; iter<1; iter++) {
      /* source files for the current location */
      eSearcher.FREigName() = "245.25_41.R";
      eSearcher.FRPhvName() = "245.25_41.R.phv";
      /* update azimuth & distance and Focal corrections based on the current location and finfo */
      eSearcher.UpdateAziDis();
      if( ! eSearcher.UpdateFocalCorr() ) {
	 std::cerr<<"Error(main): correct focal failed!"<<std::endl;
	 exit(0);
      }
      /* search for a better location */
      if( ! eSearcher.SearchLocation(500, 0.98, 0.5) ) {
	 std::cerr<<"Error(main): search location failed!"<<std::endl;
	 exit(0);
      }
      /* search for better focal info 
      if( ! eSearcher.SearchFocal( 200, 0.95, 0.3 ) ) {
	 std::cerr<<"Error(main): search focal failed!"<<std::endl;
	 exit(0);
      }
      */
   }

   std::cerr<<eSearcher.FInfo()<<std::endl;

   return 0;
}
