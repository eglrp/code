%!PS-Adobe-2.0
%%Title: h10_Gdelay_20sec_30sec.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Feb 25 11:15:31 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
490 280 M
63 0 V
6409 0 R
-63 0 V
stroke
406 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-80)]
] -46.7 MRshow
1.000 UL
LTb
490 854 M
63 0 V
6409 0 R
-63 0 V
stroke
406 854 M
[ [(Helvetica) 140.0 0.0 true true 0 (-60)]
] -46.7 MRshow
1.000 UL
LTb
490 1428 M
63 0 V
6409 0 R
-63 0 V
stroke
406 1428 M
[ [(Helvetica) 140.0 0.0 true true 0 (-40)]
] -46.7 MRshow
1.000 UL
LTb
490 2002 M
63 0 V
6409 0 R
-63 0 V
stroke
406 2002 M
[ [(Helvetica) 140.0 0.0 true true 0 (-20)]
] -46.7 MRshow
1.000 UL
LTb
490 2576 M
63 0 V
6409 0 R
-63 0 V
stroke
406 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
490 3150 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3150 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
490 3724 M
63 0 V
6409 0 R
-63 0 V
stroke
406 3724 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MRshow
1.000 UL
LTb
490 4298 M
63 0 V
6409 0 R
-63 0 V
stroke
406 4298 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MRshow
1.000 UL
LTb
490 4872 M
63 0 V
6409 0 R
-63 0 V
stroke
406 4872 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 80)]
] -46.7 MRshow
1.000 UL
LTb
490 280 M
0 63 V
0 4529 R
0 -63 V
stroke
490 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
1299 280 M
0 63 V
0 4529 R
0 -63 V
stroke
1299 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
2108 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2108 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
2917 280 M
0 63 V
0 4529 R
0 -63 V
stroke
2917 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
3726 280 M
0 63 V
0 4529 R
0 -63 V
stroke
3726 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
4535 280 M
0 63 V
0 4529 R
0 -63 V
stroke
4535 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
5344 280 M
0 63 V
0 4529 R
0 -63 V
stroke
5344 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 300)]
] -46.7 MCshow
1.000 UL
LTb
6153 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6153 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 350)]
] -46.7 MCshow
1.000 UL
LTb
6962 280 M
0 63 V
0 4529 R
0 -63 V
stroke
6962 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 400)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
490 280 M
6472 0 V
0 4592 V
-6472 0 V
490 280 L
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
6311 4739 M
('245.25_41.R_T_AZ_s205_d51_r-93_h10_p20') Rshow
LT0
490 2549 Pls
522 2554 Pls
555 2559 Pls
587 2563 Pls
619 2566 Pls
652 2569 Pls
684 2572 Pls
717 2574 Pls
749 2576 Pls
781 2578 Pls
814 2579 Pls
846 2581 Pls
878 2582 Pls
911 2583 Pls
943 2585 Pls
975 2586 Pls
1008 2588 Pls
1040 2590 Pls
1072 2592 Pls
1105 2594 Pls
1137 2596 Pls
1170 2599 Pls
1202 2603 Pls
1234 2607 Pls
1267 2611 Pls
1299 2616 Pls
1331 2621 Pls
1364 2627 Pls
1396 2634 Pls
1428 2641 Pls
1461 2649 Pls
1493 2657 Pls
1526 2667 Pls
1558 2676 Pls
1590 2687 Pls
1623 2698 Pls
1655 2710 Pls
1687 2722 Pls
1720 2735 Pls
1752 2749 Pls
1784 2762 Pls
1817 2776 Pls
1849 2790 Pls
1881 2804 Pls
1914 2817 Pls
1946 2831 Pls
1979 2844 Pls
2011 2857 Pls
2043 2869 Pls
2076 2881 Pls
2108 2892 Pls
2140 2902 Pls
2173 2911 Pls
2205 2919 Pls
2237 2926 Pls
2270 2932 Pls
2302 2937 Pls
2335 2941 Pls
2367 2943 Pls
2399 2944 Pls
2432 2944 Pls
2464 2942 Pls
2496 2939 Pls
2529 2935 Pls
2561 2929 Pls
2593 2922 Pls
2626 2913 Pls
2658 2903 Pls
2690 2892 Pls
2723 2879 Pls
2755 2866 Pls
2788 2851 Pls
2820 2836 Pls
2852 2820 Pls
2885 2803 Pls
2917 2786 Pls
2949 2769 Pls
2982 2753 Pls
3014 2736 Pls
3046 2720 Pls
3079 2705 Pls
3111 2691 Pls
3144 2677 Pls
3176 2665 Pls
3208 2653 Pls
3241 2642 Pls
3273 2633 Pls
3305 2624 Pls
3338 2616 Pls
3370 2609 Pls
3402 2603 Pls
3435 2598 Pls
3467 2593 Pls
3499 2589 Pls
3532 2586 Pls
3564 2583 Pls
3597 2580 Pls
3629 2578 Pls
3661 2576 Pls
3694 2574 Pls
3726 2573 Pls
3758 2571 Pls
3791 2570 Pls
3823 2569 Pls
3855 2567 Pls
3888 2566 Pls
3920 2564 Pls
3953 2562 Pls
3985 2560 Pls
4017 2558 Pls
4050 2556 Pls
4082 2553 Pls
4114 2549 Pls
4147 2545 Pls
4179 2541 Pls
4211 2536 Pls
4244 2531 Pls
4276 2525 Pls
4308 2518 Pls
4341 2511 Pls
4373 2503 Pls
4406 2495 Pls
4438 2485 Pls
4470 2476 Pls
4503 2465 Pls
4535 2454 Pls
4567 2442 Pls
4600 2430 Pls
4632 2417 Pls
4664 2403 Pls
4697 2390 Pls
4729 2376 Pls
4762 2362 Pls
4794 2348 Pls
4826 2335 Pls
4859 2321 Pls
4891 2308 Pls
4923 2295 Pls
4956 2283 Pls
4988 2271 Pls
5020 2260 Pls
5053 2250 Pls
5085 2241 Pls
5117 2233 Pls
5150 2226 Pls
5182 2220 Pls
5215 2215 Pls
5247 2211 Pls
5279 2209 Pls
5312 2208 Pls
5344 2208 Pls
5376 2210 Pls
5409 2213 Pls
5441 2217 Pls
5473 2223 Pls
5506 2230 Pls
5538 2239 Pls
5571 2249 Pls
5603 2260 Pls
5635 2273 Pls
5668 2286 Pls
5700 2301 Pls
5732 2316 Pls
5765 2332 Pls
5797 2349 Pls
5829 2366 Pls
5862 2383 Pls
5894 2399 Pls
5926 2416 Pls
5959 2432 Pls
5991 2447 Pls
6024 2461 Pls
6056 2475 Pls
6088 2487 Pls
6121 2499 Pls
6153 2510 Pls
6185 2519 Pls
6218 2528 Pls
6250 2536 Pls
6282 2543 Pls
6315 2549 Pls
6594 4739 Pls
1.000 UP
1.000 UL
LT2
LTb
6311 4599 M
('245.25_41.R_T_AZ_s205_d51_r-93_h10_p30') Rshow
LT2
490 541 Crs
522 649 Crs
555 1123 Crs
587 1688 Crs
619 2086 Crs
652 2317 Crs
684 2449 Crs
717 2527 Crs
749 2576 Crs
781 2610 Crs
814 2634 Crs
846 2654 Crs
878 2672 Crs
911 2689 Crs
943 2708 Crs
975 2729 Crs
1008 2754 Crs
1040 2784 Crs
1072 2822 Crs
1105 2868 Crs
1137 2927 Crs
1170 2998 Crs
1202 3085 Crs
1234 3185 Crs
1267 3293 Crs
1299 3396 Crs
1331 3479 Crs
1364 3527 Crs
1396 3534 Crs
1428 3502 Crs
1461 3443 Crs
1493 3370 Crs
1526 3293 Crs
1558 3219 Crs
1590 3153 Crs
1623 3094 Crs
1655 3043 Crs
1687 3000 Crs
1720 2963 Crs
1752 2932 Crs
1784 2905 Crs
1817 2882 Crs
1849 2862 Crs
1881 2845 Crs
1914 2830 Crs
1946 2817 Crs
1979 2806 Crs
2011 2796 Crs
2043 2788 Crs
2076 2780 Crs
2108 2774 Crs
2140 2768 Crs
2173 2763 Crs
2205 2759 Crs
2237 2755 Crs
2270 2752 Crs
2302 2750 Crs
2335 2748 Crs
2367 2746 Crs
2399 2745 Crs
2432 2745 Crs
2464 2745 Crs
2496 2745 Crs
2529 2746 Crs
2561 2747 Crs
2593 2749 Crs
2626 2752 Crs
2658 2755 Crs
2690 2758 Crs
2723 2763 Crs
2755 2768 Crs
2788 2775 Crs
2820 2782 Crs
2852 2791 Crs
2885 2801 Crs
2917 2814 Crs
2949 2828 Crs
2982 2846 Crs
3014 2867 Crs
3046 2894 Crs
3079 2926 Crs
3111 2967 Crs
3144 3019 Crs
3176 3088 Crs
3208 3180 Crs
3241 3307 Crs
3273 3483 Crs
3305 3728 Crs
3338 4048 Crs
3370 4393 Crs
3402 4611 Crs
3435 4503 Crs
3467 4029 Crs
3499 3464 Crs
3532 3066 Crs
3564 2835 Crs
3597 2703 Crs
3629 2625 Crs
3661 2576 Crs
3694 2542 Crs
3726 2518 Crs
3758 2498 Crs
3791 2480 Crs
3823 2463 Crs
3855 2444 Crs
3888 2423 Crs
3920 2398 Crs
3953 2368 Crs
3985 2330 Crs
4017 2284 Crs
4050 2225 Crs
4082 2154 Crs
4114 2067 Crs
4147 1967 Crs
4179 1859 Crs
4211 1756 Crs
4244 1673 Crs
4276 1625 Crs
4308 1618 Crs
4341 1650 Crs
4373 1709 Crs
4406 1782 Crs
4438 1859 Crs
4470 1933 Crs
4503 2000 Crs
4535 2058 Crs
4567 2109 Crs
4600 2152 Crs
4632 2189 Crs
4664 2220 Crs
4697 2247 Crs
4729 2270 Crs
4762 2290 Crs
4794 2307 Crs
4826 2322 Crs
4859 2335 Crs
4891 2346 Crs
4923 2356 Crs
4956 2364 Crs
4988 2372 Crs
5020 2378 Crs
5053 2384 Crs
5085 2389 Crs
5117 2393 Crs
5150 2397 Crs
5182 2400 Crs
5215 2402 Crs
5247 2404 Crs
5279 2406 Crs
5312 2407 Crs
5344 2407 Crs
5376 2407 Crs
5409 2407 Crs
5441 2406 Crs
5473 2405 Crs
5506 2403 Crs
5538 2400 Crs
5571 2397 Crs
5603 2394 Crs
5635 2389 Crs
5668 2384 Crs
5700 2377 Crs
5732 2370 Crs
5765 2361 Crs
5797 2351 Crs
5829 2338 Crs
5862 2324 Crs
5894 2306 Crs
5926 2285 Crs
5959 2258 Crs
5991 2226 Crs
6024 2185 Crs
6056 2133 Crs
6088 2064 Crs
6121 1972 Crs
6153 1845 Crs
6185 1669 Crs
6218 1424 Crs
6250 1104 Crs
6282 759 Crs
6315 541 Crs
6594 4599 Crs
1.000 UL
LTb
490 280 M
6472 0 V
0 4592 V
-6472 0 V
490 280 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
