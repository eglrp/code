#!/bin/csh

if( $#argv != 3 ) then
   echo "Usage: "$0" [sacfile] [station.lst] [out_file_list]"
   exit 0
endif

set fcleanup = filetobedel.txt
### locate stations
set sacf = $argv[1]
set sac = `echo $sacf | awk -F/ '{print $NF}'`
set sta1 = `echo $sac | cut -d_ -f2`
set sta2 = `echo $sac | cut -d_ -f3 | cut -d. -f1`
### read locations from station.lst
set stalst = $argv[2]
set loc = `awk -v sta=$sta1 '$1==sta{print $2"_"$3; exit}' $stalst`
set lat1 = `echo $loc | cut -d_ -f2`
set lon1 = `echo $loc | cut -d_ -f1`
set loc = `awk -v sta=$sta2 '$1==sta{print $2"_"$3; exit}' $stalst`
set lat2 = `echo $loc | cut -d_ -f2`
set lon2 = `echo $loc | cut -d_ -f1`
### estimate wavelength
set lamdamin = 2
set lamdamax = 10
### set all names
set outname = $sac'_DISP_predicted'
set outnm2 = $sacf
set sacn=$sacf'_neg'
set sacp=$sacf'_pos'
set DispGrv = $outnm2'.R.grv'
set DispPhv = $outnm2'.R.phv'
### compute bathymetry and age
set exe = '/home/tianye/code/Programs/mini_tools/MapOperation/PathAvg/PathAvg'
set bathypath = '/mtera/tianye/ASN_OBS_BHZ/PaperResults/DISP_Pred/Bathymetry'
set agepath = '/mtera/tianye/ASN_OBS_BHZ/PaperResults/DISP_Pred/Age'
set bathy = `$exe $bathypath'/sea_floor.CICE.HD' $lat1 $lon1 $lat2 $lon2 $lamdamax`
set age = `$exe $agepath'/age.3.6.xyz.HD' $lat1 $lon1 $lat2 $lon2 $lamdamax | awk '{printf "%.1f", $1}'`
if ( `echo $age $bathy | awk '{if($1==-12345.||$2==-12345.){print 1}else{print 0}}'` )  exit
### read in and update modfile
set modpath = '/mtera/tianye/ASN_OBS_BHZ/PaperResults/DISP_Pred/SV_allage_model'
set modfile = $modpath'/'$age'.thk.out'
if( ! -e $modfile ) then
echo $sacf'.R.grv' $sacf'.R.phv' >> $fcleanup
goto cleanup
endif
if( `awk -v sta1=$sta1 -v sta2=$sta2 '$1==sta1 && $2==sta2' FTAN_files.lst_old | wc -l` == 1 ) goto skip
 #set bathy = `echo $bathy | awk '{print $1-100}'`
 #echo $modfile $bathy
echo temp.thk >> $fcleanup
awk -v bathy=$bathy 'BEGIN{dep=0.;bathy=-bathy/1000.;flag=0}{dep+=$1; if(dep>=bathy){if(flag==0){print bathy,0.000,0;flag++}else if(flag==1){print dep-bathy,$2,$3;flag++}else{print $0}}}' $modfile > temp.thk
awk '{if($2==0){print $1,1.45,0,0.77,$3}else{print $1,$2*1.73,$2,$2*1.73*0.32 + 0.77,$3}}' temp.thk > model.tmp
### run SURF_DISP
#set outname = $sac'_DISP_predicted'
echo $outname'.R' $outname'.R.att' model.tmp $outname'.R.???' >> $fcleanup
SURF_DISP model.tmp $outname R 0 1 0.1 30 0.2 -a -f -c
### predicted group/phase disp file ###
#set outnm2 = $sacf
#echo $outnm2'.R.grv' $outnm2'.R.phv' >> $fcleanup
   ## use only the overtone (second) part from the predicted grv and pha files
awk 'NF>0' $outname'.R.grv' | awk 'BEGIN{oldper=0}{print $1-oldper,$1,$2;oldper=$1}' | awk 'BEGIN{flagp=0}{if(flagp==0){if($1<0){flagp=1}}else{print $2,$3}}' > $outnm2'.R.grv'
awk 'NF>0' $outname'.R.phv' | awk 'BEGIN{oldper=0}{print $1-oldper,$1,$2;oldper=$1}' | awk 'BEGIN{flagp=0}{if(flagp==0){if($1<0){flagp=1}}else{print $2,$3}}' > $outnm2'.R.phv'
### produce .SAC_pos and .SAC_neg
#set sacn=$sacf'_neg'
#set sacp=$sacf'_pos'
echo $sacp $sacn >> $fcleanup
sac << END
cut -3000 0
r $sacf
reverse
ch b 0
w $sacn
cut 0 3000
r $sacf
w $sacp
quit
END
### run FTAN ###
#set DispGrv = $outnm2'.R.grv'
#set DispPhv = $outnm2'.R.phv'
set param = '-1 0.3 4.5 1. 35. 15. 1.5 3. 0.99 5.'
set FTANexe = /home/tianye/code/Programs/FTAN_amp_snr_predgrv/aftani_c_pgl_amp
   ### on positive and negative lags
echo $sacp"\n"$sacn | awk -v param="$param" '{print param,$1,"0" }' > param_R.dat
#echo ${sacp}_2_DISP.1 ${sacp}_amp_snr ${sacn}_2_DISP.1 ${sacn}_amp_snr >> $fcleanup
$FTANexe param_R.dat $DispPhv $DispGrv 0
if( ! -e ${sacp}_2_DISP.1 || ! -e ${sacp}_amp_snr || ! -e ${sacn}_2_DISP.1 || ! -e ${sacn}_amp_snr ) goto cleanup
### output produced fname and other info to the outlist
skip:
set dnum = `saclst user0 f $sacf | awk '{print $2}'`
echo $sta1 $sta2 ${sacp}_2_DISP.1 ${sacp}_amp_snr ${sacn}_2_DISP.1 ${sacn}_amp_snr $dnum $DispGrv $DispPhv >> $argv[3]

cleanup:
if( ! -e $fcleanup ) exit
more $fcleanup | xargs -n 1 sh -c 'rm -f $0'
rm -f $fcleanup
